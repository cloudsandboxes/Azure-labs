#A development team does not want to have their dev-VM in the shutdown pool because after a restart they are not able to access the internet anymore. 
#Only when they create a new VM they receive a status code of HTTP/2 200 when calling https://cloudsandboxes.nl
#But after a reboot their code ends up in a loop and their app stops working.
#The code they try to execute is: curl -Is https://cloudsandboxes.nl | head -n 1  
#Could you solve their issue, so their dev vm could be added to the shutdown pool to save costs during off-hours? 

#login to their VM with cloudsandboxes/fjhiwe3434jfkdJJ

#The Azure costs of this lab is about 0.01 dollar per hour

trigger: none
pool:
  vmImage: 'ubuntu-latest'
steps:
- task: AzureCLI@2
  displayName: Create lab setup
  inputs:
    azureSubscription: <YourAzureConnectionName>
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
          Write-Host "##[section]Create VM"
          $ResourceGroup= "BrowseInternet"
          az group create --name $ResourceGroup --location "east-us"
          az vm create --name "browseinternet" --resource-group $ResourceGroup --image "UbuntuLTS" --admin-username "cloudsandboxes" --admin-password "fjhiwe3434jfkdJJ" --size "Standard_B1ls"
          az vm run-command invoke -g $ResourceGroup -n "browseinternet" --command-id RunShellScript --scripts "sudo iptables -D OUTPUT -p tcp --dport 80 -j ACCEPT && sudo iptables -D OUTPUT -p tcp --dport 443 -j ACCEPT"
          az vm run-command invoke -g $ResourceGroup -n "browseinternet" --command-id RunShellScript --scripts "sudo -i && cd /home && echo 'sudo iptables -A OUTPUT -p tcp --dport 80 -j ACCEPT' >> initialize-security.sh && echo 'sudo iptables -A OUTPUT -p tcp --dport 443 -j ACCEPT' >> initialize-security.sh && sudo chmod 755 initialize-security.sh"
          az vm run-command invoke -g $ResourceGroup -n "browseinternet" --command-id RunShellScript --scripts "sudo -i && cd /etc/systemd/system && echo '[Service]' >> security.service && echo 'ExecStart= /bin/bash /home/initialize-security.sh' >> security.service && echo '[Install]' >> security.service && echo 'WantedBy=multi-user.target' >> security.service && sudo chmod 644 /etc/systemd/system/security.service && sudo systemctl enable security.service && systemctl daemon-reload && sudo systemctl restart security.service"
                    
      
